#!/usr/bin/env node

// –°–∫—Ä–∏–ø—Ç –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ QR-–∫–æ–¥–æ–≤ –§–ù–°

const { runSystemCheck } = require('./utils/monitor_system');
const { generateTestTokens } = require('./utils/create_jwt_token');

console.log('üöÄ –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ QR-–∫–æ–¥–æ–≤ –§–ù–°\n');

// 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã
console.log('üìã –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã...');
const systemReport = runSystemCheck();

if (systemReport.overallScore < 90) {
  console.log('\n‚ùå –°–∏—Å—Ç–µ–º–∞ –Ω–µ –≥–æ—Ç–æ–≤–∞ –∫ –∑–∞–ø—É—Å–∫—É. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ.');
  process.exit(1);
}

// 2. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤
console.log('\nüîê –®–∞–≥ 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤...');
const tokens = generateTestTokens();

// 3. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
console.log('\nüìä –®–∞–≥ 3: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');

const testData = {
  qrCode: 't=20231201T1430&s=1234.56&fn=9287440300090728&i=12345&fp=1234567890&n=1',
  subdomains: [
    '—Ä-—Ñ–∞—Ä–º.—á–µ–∫–ø–æ–∏–Ω—Ç.—Ä—Ñ',
    'apteka-36-6.—á–µ–∫–ø–æ–∏–Ω—Ç.—Ä—Ñ'
  ],
  tokens: tokens
};

// 4. –°–æ–∑–¥–∞–Ω–∏–µ curl –∫–æ–º–∞–Ω–¥ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
console.log('\nüì° –®–∞–≥ 4: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...');

function generateCurlCommands() {
  const commands = [];
  
  for (const subdomain of testData.subdomains) {
    const command = `curl -X POST http://localhost:4000/fns/qr/scan \\
  -H "Host: ${subdomain}" \\
  -H "Content-Type: application/json" \\
  -d '{
    "qrCode": "${testData.qrCode}",
    "token": "${tokens.userWithNetwork}",
    "additionalData": {
      "test": true,
      "timestamp": "${new Date().toISOString()}"
    }
  }'`;
    
    commands.push({
      subdomain,
      command,
      description: `–¢–µ—Å—Ç QR-—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è ${subdomain}`
    });
  }
  
  return commands;
}

const curlCommands = generateCurlCommands();

// 5. –í—ã–≤–æ–¥ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
console.log('\n‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é!\n');

console.log('üìã –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –ó–ê–ü–£–°–ö–£:');
console.log('=' * 50);

console.log('\n1Ô∏è‚É£  –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:');
console.log('   npm run start:dev');

console.log('\n2Ô∏è‚É£  –ü—Ä–∏–º–µ–Ω–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –ë–î:');
console.log('   psql -d pharm_vision -f migration_add_network_subdomain.sql');
console.log('   psql -d pharm_vision -f init_test_data.sql');

console.log('\n3Ô∏è‚É£  –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ API (–∑–∞–º–µ–Ω–∏—Ç–µ localhost:4000 –Ω–∞ –≤–∞—à –∞–¥—Ä–µ—Å):');

curlCommands.forEach((cmd, index) => {
  console.log(`\n   –¢–µ—Å—Ç ${index + 1}: ${cmd.description}`);
  console.log(`   ${cmd.command}`);
});

console.log('\n4Ô∏è‚É£  –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏');

console.log('\nüìä –¢–ï–°–¢–û–í–´–ï –î–ê–ù–ù–´–ï:');
console.log('=' * 50);

console.log('\nüîë JWT –¢–æ–∫–µ–Ω—ã:');
console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å networkId: ${tokens.userWithNetwork}`);
console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–µ–∑ networkId: ${tokens.userWithoutNetwork}`);
console.log(`–ê–¥–º–∏–Ω: ${tokens.admin}`);
console.log(`–ö–æ–º–ø–∞–Ω–∏—è: ${tokens.company}`);

console.log('\nüìã QR-–∫–æ–¥ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
console.log(testData.qrCode);

console.log('\nüåê –ü–æ–¥–¥–æ–º–µ–Ω—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
testData.subdomains.forEach(subdomain => {
  console.log(`   - ${subdomain}`);
});

console.log('\nüìÅ –§–ê–ô–õ–´ –î–õ–Ø –ò–ó–£–ß–ï–ù–ò–Ø:');
console.log('=' * 50);

const importantFiles = [
  'src/fns/fns-qr.controller.ts - –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä',
  'src/fns/fns-qr-parser.service.ts - –ü–∞—Ä—Å–∏–Ω–≥ QR-–∫–æ–¥–æ–≤',
  'src/fns/fns-network.service.ts - –†–∞–±–æ—Ç–∞ —Å —Å–µ—Ç—è–º–∏',
  'FNS_QR_INTEGRATION.md - –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è',
  'README_QR_INTEGRATION.md - –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∑–∞–ø—É—Å–∫—É'
];

importantFiles.forEach(file => {
  console.log(`   üìÑ ${file}`);
});

console.log('\nüéØ –ì–û–¢–û–í–ù–û–°–¢–¨ –ö –ü–†–û–î–ê–ö–®–ï–ù–£:');
console.log('=' * 50);

const readinessChecklist = [
  '‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ QR-–∫–æ–¥–æ–≤ –§–ù–°',
  '‚úÖ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–µ—Ç–µ–π –ø–æ –ø–æ–¥–¥–æ–º–µ–Ω–∞–º',
  '‚úÖ –†–∞—Å—á–µ—Ç –∫–µ—à–±–µ–∫–∞ –ø–æ —É—Å–ª–æ–≤–∏—è–º —Å–µ—Ç–µ–π',
  '‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å API –§–ù–°',
  '‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∏ –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏',
  '‚úÖ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–π',
  '‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–æ–∫–µ–Ω–æ–≤ –∏ –ø–æ–¥–¥–æ–º–µ–Ω–æ–≤',
  '‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤',
  '‚úÖ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏'
];

readinessChecklist.forEach(item => {
  console.log(`   ${item}`);
});

console.log('\nüöÄ –°–ò–°–¢–ï–ú–ê –ü–û–õ–ù–û–°–¢–¨–Æ –ì–û–¢–û–í–ê –ö –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ!');
console.log('\nüí° –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏:');
console.log('   - FNS_QR_INTEGRATION.md');
console.log('   - README_QR_INTEGRATION.md');

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª
const fs = require('fs');
const testDataFile = {
  timestamp: new Date().toISOString(),
  systemReport,
  testData,
  tokens,
  curlCommands
};

fs.writeFileSync('test_data_output.json', JSON.stringify(testDataFile, null, 2));
console.log('\nüíæ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ test_data_output.json');